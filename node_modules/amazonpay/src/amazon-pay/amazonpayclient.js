'use strict';

const Helper = require('./amazonpayclienthelper.js');

//class amazonPayClient {
    function amazonPayClient(configArgs) {
        this.configArgs = Object.freeze(configArgs);
    }

    /** Authorize API call 
     *   - Reserves a specified amount against the payment method(s) 
     *      stored in the order reference.
     * @see https://pay.amazon.com/developer/documentation/apireference/201752010
     * @param requestParams['amazonOrderReferenceId'] - [String]
     * @param requestParams['amount'] [String]
     * @param requestParams['authorizationReferenceId'] [String]
     * @optional requestParams['merchantId'] - [String]
     * @optional requestParams['currencyCode'] - [String]     
     * @optional requestParam['captureNow'] [String]
     * @optional requestParams['sellerNote'] [String]
     * @optional requestParams['transactionTimeout'] [String] - Defaults to 1440 minutes
     * @optional requestParams['softDescriptor'] - [String]
     * @optional requestParams['mwsAuthToken'] - [String]
     * 
     * Below is a variable that can be passed that will convert 
     *  the XML response to a JSON string instead it is not
     *  part of the API values. If you specify here and in 
     *  configArgs, this will overide configArgs value
     * @optional requestParams['jsonResponse'] - [String]
     **/
    amazonPayClient.prototype.authorize = function(requestParams) {
        const requestParamsCopy = { ...requestParams };
        const action = 'Authorize';
        const canonicalParams = {};

        Helper.addBaseParams(canonicalParams, action, this.configArgs, requestParamsCopy);
        Helper.addToMap(canonicalParams, 'AmazonOrderReferenceId',
            requestParamsCopy.amazonOrderReferenceId);
        Helper.addToMap(canonicalParams, 'AuthorizationAmount.Amount',
            requestParamsCopy.amount);
        Helper.addToMap(canonicalParams, 'AuthorizationReferenceId',
            requestParamsCopy.authorizationReferenceId);
        Helper.addToMap(canonicalParams, 'AuthorizationAmount.CurrencyCode',
            (requestParamsCopy.currencyCode || this.configArgs.currencyCode));
        Helper.addToMap(canonicalParams, 'CaptureNow', requestParamsCopy.captureNow);
        Helper.addToMap(canonicalParams, 'SellerAuthorizationNote',
            requestParamsCopy.sellerNote);
        Helper.addToMap(canonicalParams, 'TransactionTimeout',
            requestParamsCopy.transactionTimeout);
        Helper.addToMap(canonicalParams, 'SoftDescriptor',
            requestParamsCopy.softDescriptor);

        const response = Helper.sendParam(canonicalParams, this.configArgs);
        
        return Helper.jsonOrXML((requestParamsCopy.jsonResponse || 
            this.configArgs.jsonResponse), response, action);
    }

    /** AuthorizeOnBillingAgreement API call 
     *   - Reserves a specified amount against the 
     *      payment method(s) stored in the Billing Agreement.
     * @see https://pay.amazon.com/developer/documentation/apireference/201751940
     * @param requestParams['amazonBillingAgreementId)'] - [String]
     * @param requestParams['amount'] [String]
     * @param requestParams['authorizationReferenceId'] [String]
     * @optional requestParams['currencyCode'] - [String]
     * @optional requestParams['merchantId'] - [String]     
     * @optional requestParam['captureNow'] [String]
     * @optional requestParams['sellerNote'] [String]
     * @optional requestParams['sellerAuthorizationNote'] [String]
     * @optional requestParams['transactionTimeout'] [String] - Defaults to 1440 minutes
     * @optional requestParams['softDescriptor'] - [String]
     * @optional requestParams['platformId'] [String]
     * @optional requestParams['customInformation'] [String]
     * @optional requestParams['sellerOrderId'] [String]
     * @optional requestParams['storeName'] [String]
     * @optional requestParams['inheritShippingAddress'] [String]
     * @optional requestParams['mwsAuthToken'] - [String]
     * 
     * Below is a variable that can be passed that will convert 
     *  the XML response to a JSON string instead it is not
     *  part of the API values. If you specify here and in 
     *  configArgs, this will overide configArgs value
     * @optional requestParams['jsonResponse'] - [String]
     **/
    amazonPayClient.prototype.authorizeOnBillingAgreement = function(requestParams) {
        const requestParamsCopy = { ...requestParams };
        const action = 'AuthorizeOnBillingAgreement';
        const canonicalParams = {};

        Helper.addBaseParams(canonicalParams, action, this.configArgs, requestParamsCopy);
        Helper.addToMap(canonicalParams, 'AmazonBillingAgreementId',
            requestParamsCopy.amazonBillingAgreementId);
        Helper.addToMap(canonicalParams, 'AuthorizationAmount.Amount',
            requestParamsCopy.amount);
        Helper.addToMap(canonicalParams, 'AuthorizationReferenceId',
            requestParamsCopy.authorizationReferenceId);
        Helper.addToMap(canonicalParams, 'AuthorizationAmount.CurrencyCode',
            (requestParamsCopy.currencyCode || this.configArgs.currencyCode));
        Helper.addToMap(canonicalParams, 'CaptureNow', requestParamsCopy.captureNow);
        Helper.addToMap(canonicalParams, 'SellerNote', requestParamsCopy.sellerNote);
        Helper.addToMap(canonicalParams, 'SellerAuthorizationNote',
            requestParamsCopy.sellerAuthorizationNote);
        Helper.addToMap(canonicalParams, 'PlatformId', requestParamsCopy.platformId);
        Helper.addToMap(canonicalParams, 'SellerOrderAttributes.StoreName',
            requestParamsCopy.storeName);
        Helper.addToMap(canonicalParams, 'SellerOrderAttributes.SellerOrderId',
            requestParamsCopy.sellerOrderId);
        Helper.addToMap(canonicalParams, 'SellerOrderAttributes.CustomInformation',
            requestParamsCopy.customInformation);
        Helper.addToMap(canonicalParams, 'TransactionTimeout',
            requestParamsCopy.transactionTimeout);
        Helper.addToMap(canonicalParams, 'InheritShippingAddress',
            requestParamsCopy.inheritShippingAddress);
        Helper.addToMap(canonicalParams, 'SoftDescriptor',
            requestParamsCopy.softDescriptor);

        const response = Helper.sendParam(canonicalParams, this.configArgs);
        
        return Helper.jsonOrXML((requestParamsCopy.jsonResponse || 
            this.configArgs.jsonResponse), response, action);               
    }

    /** Capture API call 
     *   - Captures funds from an authorized payment instrument.
     * @see https://pay.amazon.com/developer/documentation/apireference/201752040
     * @param requestParams['amazonAuthorizationId'] - [String]
     * @param requestParams['amount'] [String]
     * @param requestParams['captureReferenceId'] [String]
     * @optional requestParams['merchantId'] - [String]
     * @optional requestParams['currencyCode'] - [String]     
     * @optional requestParams['sellerNote'] [String]
     * @optional requestParams['softDescriptor'] - [String]
     * @optional requestParams['mwsAuthToken'] - [String]
     * 
     * Below is a variable that can be passed that will convert 
     *  the XML response to a JSON string instead it is not
     *  part of the API values. If you specify here and in 
     *  configArgs, this will overide configArgs value
     * @optional requestParams['jsonResponse'] - [String]
     **/
    amazonPayClient.prototype.capture = function(requestParams) {
        const requestParamsCopy = { ...requestParams };
        const action = 'Capture';
        const canonicalParams = {};

        Helper.addBaseParams(canonicalParams, action, this.configArgs, requestParamsCopy);
        Helper.addToMap(canonicalParams, 'AmazonAuthorizationId',
            requestParamsCopy.amazonAuthorizationId);
        Helper.addToMap(canonicalParams, 'CaptureReferenceId',
            requestParamsCopy.captureReferenceId);
        Helper.addToMap(canonicalParams, 'CaptureAmount.Amount',
            requestParamsCopy.amount);
        Helper.addToMap(canonicalParams, 'CaptureAmount.CurrencyCode',
            (requestParamsCopy.currencyCode || this.configArgs.currencyCode));
        Helper.addToMap(canonicalParams, 'SellerCaptureNote',
            requestParamsCopy.sellerNote);
        Helper.addToMap(canonicalParams, 'SoftDescriptor',
            requestParamsCopy.softDescriptor);

        const response = Helper.sendParam(canonicalParams, this.configArgs);
        
        return Helper.jsonOrXML((requestParamsCopy.jsonResponse || 
            this.configArgs.jsonResponse), response, action);
    }

    /** CancelOrderReference API call 
     *   - Cancels a previously confirmed order reference.
     * @see https://pay.amazon.com/developer/documentation/apireference/201751990
     * @param requestParams['amazonOrderReferenceId'] - [String]
     * @optional requestParams['merchantId'] - [String]
     * @optional requestParams['cancelationReason'] - [String]
     * @optional requestParams['mwsAuthToken'] - [String]
     * 
     * Below is a variable that can be passed that will convert 
     *  the XML response to a JSON string instead it is not
     *  part of the API values. If you specify here and in 
     *  configArgs, this will overide configArgs value
     * @optional requestParams['jsonResponse'] - [String]
     **/
    amazonPayClient.prototype.cancelOrderReference = function(requestParams) {
        const requestParamsCopy = { ...requestParams };
        const action = 'CancelOrderReference';
        const canonicalParams = {};

        Helper.addBaseParams(canonicalParams, action, this.configArgs, requestParamsCopy);
        Helper.addToMap(canonicalParams, 'AmazonOrderReferenceId',
            requestParamsCopy.amazonOrderReferenceId);
        Helper.addToMap(canonicalParams, 'CancelationReason',
            requestParamsCopy.cancelationReason);

        const response = Helper.sendParam(canonicalParams, this.configArgs);
        
        return Helper.jsonOrXML((requestParamsCopy.jsonResponse || 
            this.configArgs.jsonResponse), response, action);
    }

    /** CloseAuthorization API call 
     *   - Closes an authorization.
     * @see https://pay.amazon.com/developer/documentation/apireference/201752070
     * @param requestParams['amazonAuthorizationId'] - [String]
     * @optional requestParams['merchantId'] - [String]
     * @optional requestParams['closeureReason'] - [String]
     * @optional requestParams['mwsAuthToken'] - [String]
     * 
     * Below is a variable that can be passed that will convert 
     *  the XML response to a JSON string instead it is not
     *  part of the API values. If you specify here and in 
     *  configArgs, this will overide configArgs value
     * @optional requestParams['jsonResponse'] - [String]
     **/
    amazonPayClient.prototype.closeAuthorization = function(requestParams) {
        const requestParamsCopy = { ...requestParams };
        const action = 'CloseAuthorization';
        const canonicalParams = {};

        Helper.addBaseParams(canonicalParams, action, this.configArgs, requestParamsCopy);
        Helper.addToMap(canonicalParams, 'AmazonAuthorizationId',
            requestParamsCopy.amazonAuthorizationId);
        Helper.addToMap(canonicalParams, 'ClosureReason',
            requestParamsCopy.cancelationReason);

        const response = Helper.sendParam(canonicalParams, this.configArgs);
        
        return Helper.jsonOrXML((requestParamsCopy.jsonResponse || 
            this.configArgs.jsonResponse), response, action);
    }

    /** CloseBillingAgreement API Call 
     *   - Returns details about the Billing Agreement object and 
     *      its current state.
     * @see https://pay.amazon.com/developer/documentation/apireference/201751950
     * @param requestParams['amazonBillingAgreementId'] - [String]
     * @optional requestParams['merchantId'] - [String]
     * @optional requestParams['closeureReason'] - [String]
     * @optional requestParams['mwsAuthToken'] - [String]
     * 
     * Below is a variable that can be passed that will convert 
     *  the XML response to a JSON string instead it is not
     *  part of the API values. If you specify here and in 
     *  configArgs, this will overide configArgs value
     * @optional requestParams['jsonResponse'] - [String]
     **/
    amazonPayClient.prototype.closeBillingAgreement = function(requestParams) {
        const requestParamsCopy = { ...requestParams };
        const action = 'CloseBillingAgreement';
        const canonicalParams = {};

        Helper.addBaseParams(canonicalParams, action, this.configArgs, requestParamsCopy);
        Helper.addToMap(canonicalParams, 'AmazonBillingAgreementId',
            requestParamsCopy.amazonBillingAgreementId);
        Helper.addToMap(canonicalParams, 'ClosureReason',
            requestParamsCopy.cancelationReason);

        const response = Helper.sendParam(canonicalParams, this.configArgs);
        
        return Helper.jsonOrXML((requestParamsCopy.jsonResponse || 
            this.configArgs.jsonResponse), response, action);
    }

    /** CloseOrderReference API call 
     *   - Confirms that an order reference has been fulfilled (fully or partially)
     *      and that you do not expect to create any new authorizations 
     *      on this order reference.
     * @see https://pay.amazon.com/developer/documentation/apireference/201752000
     * @param requestParams['amazonOrderReferenceId'] - [String]
     * @optional requestParams['merchantId'] - [String]
     * @optional requestParams['closeureReason'] - [String]
     * @optional requestParams['mwsAuthToken'] - [String]
     * 
     * Below is a variable that can be passed that will convert 
     *  the XML response to a JSON string instead it is not
     *  part of the API values. If you specify here and in 
     *  configArgs, this will overide configArgs value
     * @optional requestParams['jsonResponse'] - [String]
     **/
    amazonPayClient.prototype.closeOrderReference = function(requestParams) {
        const requestParamsCopy = { ...requestParams };
        const action = 'CloseOrderReference';
        const canonicalParams = {};

        Helper.addBaseParams(canonicalParams, action, this.configArgs, requestParamsCopy);
        Helper.addToMap(canonicalParams, 'AmazonOrderReferenceId',
            requestParamsCopy.amazonOrderReferenceId);
        Helper.addToMap(canonicalParams, 'ClosureReason',
            requestParamsCopy.cancelationReason);

        const response = Helper.sendParam(canonicalParams, this.configArgs);
        
        return Helper.jsonOrXML((requestParamsCopy.jsonResponse || 
            this.configArgs.jsonResponse), response, action);
    }

    /** ConfirmBillingAgreement API call 
     *   - Confirms that the order reference is free of constraints and 
     *      all required information has been set on the order reference.
     * @see https://pay.amazon.com/developer/documentation/apireference/201751980
     * @param requestParams['amazonBillingAgreementId'] - [String]
     * @optional requestParams['merchantId'] - [String]
     * @optional requestParams['mwsAuthToken'] - [String]
     * 
     * Below is a variable that can be passed that will convert 
     *  the XML response to a JSON string instead it is not
     *  part of the API values. If you specify here and in 
     *  configArgs, this will overide configArgs value
     * @optional requestParams['jsonResponse'] - [String]
     **/
    amazonPayClient.prototype.confirmBillingAgreement = function(requestParams) {
        const requestParamsCopy = { ...requestParams };
        const action = 'ConfirmBillingAgreement';
        const canonicalParams = {};

        Helper.addBaseParams(canonicalParams, action, this.configArgs, requestParamsCopy);
        Helper.addToMap(canonicalParams, 'AmazonBillingAgreementId',
            requestParamsCopy.amazonBillingAgreementId);

        const response = Helper.sendParam(canonicalParams, this.configArgs);
        
        return Helper.jsonOrXML((requestParamsCopy.jsonResponse || 
            this.configArgs.jsonResponse), response, action);
    }

    /** ConfirmOrderReference API call 
     *   - Confirms that the order reference is free of constraints and 
     *      all required information has been set on the order reference.
     * @see https://pay.amazon.com/developer/documentation/apireference/201751980
     * @param requestParams['amazonOrderReferenceId'] - [String]
     * @optional requestParams['merchantId'] - [String]
     * @optional requestParams['mwsAuthToken'] - [String]
     * @optional requestParams['successUrl'] - [String]
     * @optional requestParams['failureUrl'] - [String]
     * @optional requestParams['authorizationAmount'] - [String]
     * @optional requestParams['authorizationCurrencyCode'] - [String]
     * 
     * Below is a variable that can be passed that will convert 
     *  the XML response to a JSON string instead it is not
     *  part of the API values. If you specify here and in 
     *  configArgs, this will overide configArgs value
     * @optional requestParams['jsonResponse'] - [String]
     **/
    amazonPayClient.prototype.confirmOrderReference = function(requestParams) {
        const requestParamsCopy = { ...requestParams };
        const action = 'ConfirmOrderReference';
        const canonicalParams = {};

        Helper.addBaseParams(canonicalParams, action, this.configArgs, requestParamsCopy);
        Helper.addToMap(canonicalParams, 'AmazonOrderReferenceId', requestParamsCopy.amazonOrderReferenceId);
        Helper.addToMap(canonicalParams, 'SuccessUrl', requestParamsCopy.successUrl);
        Helper.addToMap(canonicalParams, 'FailureUrl', requestParamsCopy.failureUrl);

        if (typeof requestParamsCopy.authorizationAmount !== 'undefined'){
            Helper.addToMap(canonicalParams, 'AuthorizationAmount.Amount', requestParamsCopy.authorizationAmount);
            if (typeof requestParamsCopy.authorizationCurrencyCode != 'undefined'){
                Helper.addToMap(canonicalParams, 'AuthorizationAmount.CurrencyCode', requestParamsCopy.authorizationCurrencyCode);
            } else {
                Helper.addToMap(canonicalParams, 'AuthorizationAmount.CurrencyCode', this.configArgs.currencyCode);
            }
        }
        const response = Helper.sendParam(canonicalParams, this.configArgs);
        
        return Helper.jsonOrXML((requestParamsCopy.jsonResponse || this.configArgs.jsonResponse), response, action);
    }

    /** CreateOrderReferenceForId API Call 
     *   - Creates an order reference for the given object
     * @see https://pay.amazon.com/developer/documentation/apireference/201751670
     * @param id [String]
     * @optional requestParameters['merchantId'] - [String]
     * @optional requestParameters['amount'] - [String]
     * @optional requestParameters['currencyCode'] - [String]
     * @optional requestParameters['platformId'] - [String]
     * @optional requestParameters['sellerNote'] - [String]
     * @optional requestParameters['sellerOrderId'] - [String]
     * @optional requestParameters['storeName'] - [String]
     * @optional requestParameters['customInformation'] - [String]
     * @optional requestParameters['confirmNow'] - [String]
     * @optional requestParameters['idType'] - [String]
     * @optional requestParameters['inheritShippingAddress'] - [String]
     * @optional requestParameters['mwsAuthToken'] - [String]
     * 
     * Below is a variable that can be passed that will convert 
     *  the XML response to a JSON string instead it is not
     *  part of the API values. If you specify here and in 
     *  configArgs, this will overide configArgs value
     * @optional requestParams['jsonResponse'] - [String]
     **/
    amazonPayClient.prototype.createOrderReferenceForId = function(requestParams) {
        const requestParamsCopy = { ...requestParams };
        const action = 'CreateOrderReferenceForId';
        const canonicalParams = {};

        Helper.addBaseParams(canonicalParams, action, this.configArgs, requestParamsCopy);
        Helper.addToMap(canonicalParams, 'Id', requestParamsCopy.id);
        Helper.addToMap(canonicalParams, 'IdType', requestParamsCopy.idType);
        Helper.addToMap(canonicalParams, 'ConfirmNow', requestParamsCopy.confirmNow);
        Helper.addToMap(canonicalParams, 'InheritShippingAddress', requestParamsCopy.inheritShippingAddress);
        Helper.addToMap(canonicalParams, 'OrderReferenceAttributes.OrderTotal.Amount',
            requestParamsCopy.amount);
        Helper.addToMap(canonicalParams, 'OrderReferenceAttributes.OrderTotal.CurrencyCode',
            (requestParamsCopy.currencyCode || this.configArgs.currencyCode));
        Helper.addToMap(canonicalParams, 'OrderReferenceAttributes.PlatformId');
        Helper.addToMap(canonicalParams, 'OrderReferenceAttributes.SellerNote',
            requestParamsCopy.sellerNote);
        Helper.addToMap(canonicalParams, 'OrderReferenceAttributes.SellerOrderAttributes.StoreName',
            requestParamsCopy.storeName);
        Helper.addToMap(canonicalParams, 'OrderReferenceAttributes.SellerOrderAttributes.CustomInformation',
            requestParamsCopy.customInformation);
        Helper.addToMap(canonicalParams, 'OrderReferenceAttributes.SellerOrderAttributes.SellerOrderId',
            requestParamsCopy.sellerOrderId);

        const response = Helper.sendParam(canonicalParams, this.configArgs);
        
        return Helper.jsonOrXML((requestParamsCopy.jsonResponse || 
            this.configArgs.jsonResponse), response, action);
    }

    /** GetAuthorizationDetails API call 
     *   - Returns the status of a particular authorization and 
     *      the total amount captured on the authorization.
     * @see https://pay.amazon.com/developer/documentation/apireference/201752030
     * @param requestParams['amazonAuthorizationId'] - [String]
     * @optional requestParams['merchantId'] - [String]
     * @optional requestParams['mwsAuthToken'] - [String]
     * 
     * Below is a variable that can be passed that will convert 
     *  the XML response to a JSON string instead it is not
     *  part of the API values. If you specify here and in 
     *  configArgs, this will overide configArgs value
     * @optional requestParams['jsonResponse'] - [String]
     **/
    amazonPayClient.prototype.getAuthorizationDetails = function(requestParams) {
        const requestParamsCopy = { ...requestParams };
        const action = 'GetAuthorizationDetails';
        const canonicalParams = {};

        Helper.addBaseParams(canonicalParams, action, this.configArgs, requestParamsCopy);
        Helper.addToMap(canonicalParams, 'AmazonAuthorizationId',
            requestParamsCopy.amazonAuthorizationId);

        const response = Helper.sendParam(canonicalParams, this.configArgs);
        
        return Helper.jsonOrXML((requestParamsCopy.jsonResponse || 
            this.configArgs.jsonResponse), response, action);
    }

    /** GetBillingAgreementDetails API Call 
     *   - Returns details about the Billing Agreement object and its current state.
     * @see https://pay.amazon.com/developer/documentation/apireference/201751690
     * @param requestParams['amazonBillingAgreementId'] - [String]
     * @optional requestParams['merchantId'] - [String]
     * @optional requestParams['accessToken'] - [String]
     * @optional requestParams['mwsAuthToken'] - [String]
     * 
     * Below is a variable that can be passed that will convert 
     *  the XML response to a JSON string instead it is not
     *  part of the API values. If you specify here and in 
     *  configArgs, this will overide configArgs value
     * @optional requestParams['jsonResponse'] - [String]
     **/
    amazonPayClient.prototype.getBillingAgreementDetails = function(requestParams) {
        const requestParamsCopy = { ...requestParams };
        const action = 'GetBillingAgreementDetails';
        const canonicalParams = {};

        Helper.addBaseParams(canonicalParams, action, this.configArgs, requestParamsCopy);
        Helper.addToMap(canonicalParams, 'AmazonBillingAgreementId',
            requestParamsCopy.amazonBillingAgreementId);
        Helper.addToMap(canonicalParams, 'AccessToken',
            requestParamsCopy.accessToken);

        const response = Helper.sendParam(canonicalParams, this.configArgs);
        
        return Helper.jsonOrXML((requestParamsCopy.jsonResponse || 
            this.configArgs.jsonResponse), response, action);
    }

    /** GetCaptureDetails API call 
     *   - Returns the status of a particular capture and 
     *      the total amount refunded on the capture.
     * @see https://pay.amazon.com/developer/documentation/apireference/201752060
     * @param requestParams['amazonCaptureId'] - [String]
     * @optional requestParams['merchantId'] - [String]
     * @optional requestParams['mwsAuthToken'] - [String]
     * 
     * Below is a variable that can be passed that will convert 
     *  the XML response to a JSON string instead it is not
     *  part of the API values. If you specify here and in 
     *  configArgs, this will overide configArgs value
     * @optional requestParams['jsonResponse'] - [String]
     **/
    amazonPayClient.prototype.getCaptureDetails = function(requestParams) {
        const requestParamsCopy = { ...requestParams };
        const action = 'GetCaptureDetails';
        const canonicalParams = {};

        Helper.addBaseParams(canonicalParams, action, this.configArgs, requestParamsCopy);
        Helper.addToMap(canonicalParams, 'AmazonCaptureId',
            requestParamsCopy.amazonCaptureId);

        const response = Helper.sendParam(canonicalParams, this.configArgs);
        
        return Helper.jsonOrXML((requestParamsCopy.jsonResponse || 
            this.configArgs.jsonResponse), response, action);
    }

    /** GetMerchantAccountStatus API call 
     *   - Returns the status of the Merchant Account.
     * @see https://pay.amazon.com/us/developer/documentation/apireference/82TPMDNUCGPGUK8
     * @param requestParams['amazonRefundId'] - [String]
     * @optional requestParams['merchantId'] - [String]
     * @optional requestParams['mwsAuthToken'] - [String]
     * 
     * Below is a variable that can be passed that will convert 
     *  the XML response to a JSON string instead it is not
     *  part of the API values. If you specify here and in 
     *  configArgs, this will overide configArgs value
     * @optional requestParams['jsonResponse'] - [String]
     **/
    amazonPayClient.prototype.getMerchantAccountStatus = function(requestParams) {
        const requestParamsCopy = { ...requestParams };
        const action = 'GetMerchantAccountStatus';
        const canonicalParams = {};

        Helper.addBaseParams(canonicalParams, action, this.configArgs, requestParamsCopy);

    const response = Helper.sendParam(canonicalParams, this.configArgs);
        
    return Helper.jsonOrXML((requestParamsCopy.jsonResponse || 
        this.configArgs.jsonResponse), response, action);
    }

    /** GetOrderReferenceDetails API call 
     *   - Returns details about the Order Reference object and its current state.
     * @see https://pay.amazon.com/developer/documentation/apireference/201751970
     * @param requestParams['amazonOrderReferenceId'] - [String]
     * @optional requestParams['merchantId'] - [String]
     * @optional requestParams['accessToken'] - [String]
     * @optional requestParams['mwsAuthToken'] - [String]
     * 
     * Below is a variable that can be passed that will convert 
     *  the XML response to a JSON string instead it is not
     *  part of the API values. If you specify here and in 
     *  configArgs, this will overide configArgs value
     * @optional requestParams['jsonResponse'] - [String]
     **/
    amazonPayClient.prototype.getOrderReferenceDetails = function(requestParams) {
        const requestParamsCopy = { ...requestParams };
        const action = 'GetOrderReferenceDetails';
        const canonicalParams = {};

        Helper.addBaseParams(canonicalParams, action, this.configArgs, requestParamsCopy);
        Helper.addToMap(canonicalParams, 'AmazonOrderReferenceId',
            requestParamsCopy.amazonOrderReferenceId);
        Helper.addToMap(canonicalParams, 'AccessToken',
            requestParamsCopy.accessToken);

        const response = Helper.sendParam(canonicalParams, this.configArgs);
        
        return Helper.jsonOrXML((requestParamsCopy.jsonResponse || 
            this.configArgs.jsonResponse), response, action);
    }

    /** GetRefundDetails API call 
     *   - Returns the status of a particular refund.
     * @see https://pay.amazon.com/developer/documentation/apireference/201752100
     * @param requestParams['amazonRefundId'] - [String]
     * @optional requestParams['merchantId'] - [String]
     * @optional requestParams['mwsAuthToken'] - [String]
     * 
     * Below is a variable that can be passed that will convert 
     *  the XML response to a JSON string instead it is not
     *  part of the API values. If you specify here and in 
     *  configArgs, this will overide configArgs value
     * @optional requestParams['jsonResponse'] - [String]
     **/
    amazonPayClient.prototype.getRefundDetails = function(requestParams) {
        const requestParamsCopy = { ...requestParams };
        const action = 'GetRefundDetails';
        const canonicalParams = {};

        Helper.addBaseParams(canonicalParams, action, this.configArgs, requestParamsCopy);
        Helper.addToMap(canonicalParams, 'AmazonRefundId',
            requestParamsCopy.amazonRefundId);

        const response = Helper.sendParam(canonicalParams, this.configArgs);
        
        return Helper.jsonOrXML((requestParamsCopy.jsonResponse || 
            this.configArgs.jsonResponse), response, action);
    }

    /** getUserInfo convenience function - Returns user's profile information from Amazon using the access token returned by the Button widget.
     *
     * @see http://login.amazon.com/website Step 4
     * @param $accessToken [String]
     **/
    amazonPayClient.prototype.getUserInfo = function(accessToken) {
        return Helper.getUserInfo(accessToken, this.configArgs);
    }

    /** SetBillingAgreementDetails API call 
     *   - Sets Billing Agreement details such as a description of 
     *      the agreement and other information about the seller.
     * @see https://pay.amazon.com/developer/documentation/apireference/201751700
     * @param amazonBillingAgreementId [String]
     * @optional requestParameters['merchantId'] - [String]
     * @optional requestParameters['platformId'] - [String]
     * @optional requestParameters['sellerNote'] - [String]
     * @optional requestParameters['sellerBillingAgreementId'] - [String]
     * @optional requestParameters['storeName'] - [String]
     * @optional requestParameters['customInformation'] - [String]
     * @optional requestParameters['mwsAuthToken'] - [String]
     * 
     * Below is a variable that can be passed that will convert 
     *  the XML response to a JSON string instead it is not
     *  part of the API values. If you specify here and in 
     *  configArgs, this will overide configArgs value
     * @optional requestParams['jsonResponse'] - [String]
     **/
    amazonPayClient.prototype.setBillingAgreementDetails = function(requestParams) {
        const requestParamsCopy = { ...requestParams };
        const action = 'SetBillingAgreementDetails';
        const canonicalParams = {};

        Helper.addBaseParams(canonicalParams, action, this.configArgs, requestParamsCopy);
        Helper.addToMap(canonicalParams, 'AmazonBillingAgreementId',
            requestParamsCopy.amazonBillingAgreementId);
        Helper.addToMap(canonicalParams, 'BillingAgreementAttributes.PlatformId');
        Helper.addToMap(canonicalParams, 'BillingAgreementAttributes.SellerNote',
            requestParamsCopy.sellerNote);
        Helper.addToMap(canonicalParams,
            'BillingAgreementAttributes.SellerBillingAgreementAttributes.StoreName',
            requestParamsCopy.storeName);
        Helper.addToMap(canonicalParams,
            'BillingAgreementAttributes.SellerBillingAgreementAttributes.CustomInformation',
            requestParamsCopy.customInformation);
        Helper.addToMap(canonicalParams,
            'BillingAgreementAttributes.SellerBillingAgreementAttributes.SellerBillingAgreementId',
            requestParamsCopy.sellerBillingAgreementId);

        const response = Helper.sendParam(canonicalParams, this.configArgs);
        
        return Helper.jsonOrXML((requestParamsCopy.jsonResponse || 
            this.configArgs.jsonResponse), response, action);
    }

    /** SetOrderAtributes API cal 
     *   - Sets order attributes such as the order total and a description
     *      for the order
     * @see https://pay.amazon.com/us/developer/documentation/apireference/22N636REVGXTPNR
     * @param amazon_order_reference_id [String]
     * @optional requestParameters['merchantId'] - [String]
     * @optional requestParameters['amount'] - [String]
     * @optional requestParameters['currencyCode'] - [String]
     * @optional requestParameters['platformId'] - [String]
     * @optional requestParameters['sellerNote'] - [String]
     * @optional requestParameters['sellerOrderId'] - [String]
     * @optional requestParameters['storeName'] - [String]
     * @optional requestParameters['customInformation'] - [String]
     * @optional requestParameters['requestPaymentAuthorization'] - [String]
     * @optional requestParameters['paymentServiceProviderId'] - [String]
     * @optional requestParameters['paymentServiceProviderOrderId'] - [String]
     * @optional requestParameters['supplementaryData'] - [String]
     * @optional requestParameters['orderItemCategories'] - Array[String]
     * @optional requestParameters['mwsAuthToken'] - [String]
     * 
     * Below is a variable that can be passed that will convert 
     *  the XML response to a JSON string or object instead. 
     *  It is not part of the API values. If you specify here and in 
     *  configArgs, this will overide configArgs value.
     *  jsonResponse can be 'jsonString' for a JSON string
     *  or it can be 'jsonObject' for a JSON object
     * @optional requestParams['jsonResponse'] - [String]
     **/
    amazonPayClient.prototype.setOrderAttributes = function(requestParams) {
        const requestParamsCopy = { ...requestParams };
        const action = 'SetOrderAttributes';
        const canonicalParams = {};

        Helper.addBaseParams(canonicalParams, action, this.configArgs, requestParamsCopy);
        Helper.addToMap(canonicalParams, 'AmazonOrderReferenceId',
            requestParamsCopy.amazonOrderReferenceId);
        Helper.addToMap(canonicalParams, 'OrderAttributes.OrderTotal.Amount',
            requestParamsCopy.amount);
        Helper.addToMap(canonicalParams, 'OrderAttributes.OrderTotal.CurrencyCode',
            (requestParamsCopy.currencyCode || this.configArgs.currencyCode));
        Helper.addToMap(canonicalParams, 'OrderAttributes.PlatformId');
        Helper.addToMap(canonicalParams, 'OrderAttributes.SellerNote',
            requestParamsCopy.sellerNote);
        Helper.addToMap(canonicalParams, 'OrderAttributes.PaymentServiceProviderAttributes.PaymentServiceProviderId',
            requestParamsCopy.paymentServiceProviderId);
        Helper.addToMap(canonicalParams, 'OrderAttributes.PaymentServiceProviderAttributes.PaymentServiceProviderOrderId',
            requestParamsCopy.paymentServiceProviderOrderId);
        Helper.addToMap(canonicalParams, 'OrderAttributes.RequestPaymentAuthorization',
            requestParamsCopy.requestPaymentAuthorization);
        Helper.addToMap(canonicalParams, 'OrderAttributes.SellerOrderAttributes.StoreName',
            requestParamsCopy.storeName);
        Helper.addToMap(canonicalParams, 'OrderAttributes.SellerOrderAttributes.CustomInformation',
            requestParamsCopy.customInformation);
        Helper.addToMap(canonicalParams, 'OrderAttributes.SellerOrderAttributes.SellerOrderId',
            requestParamsCopy.sellerOrderId);
        Helper.addArrayToMap(canonicalParams, 'OrderAttributes.SellerOrderAttributes.OrderItemCategories.OrderItemCategory',
            requestParamsCopy.orderItemCategory);
        Helper.addToMap(canonicalParams, 'OrderAttributes.SellerOrderAttributes.SupplementaryData',
            requestParamsCopy.supplementaryData);

        const response = Helper.sendParam(canonicalParams, this.configArgs);
        
        return Helper.jsonOrXML((requestParamsCopy.jsonResponse || 
            this.configArgs.jsonResponse), response, action);
    }

    /** Refund API call 
     *   - Refunds a previously captured amount
     * @see https://pay.amazon.com/developer/documentation/apireference/201752080
     * @param requestParams['amazonCaptureId'] - [String]
     * @param requestParams['amount'] [String]
     * @param requestParams['refundReferenceId'] [String]
     * @optional requestParams['merchantId'] - [String]
     * @optional requestParams['currencyCode'] - [String]     
     * @optional requestParams['sellerNote'] [String]
     * @optional requestParams['softDescriptor'] - [String]
     * @optional requestParams['mwsAuthToken'] - [String]
     * 
     * Below is a variable that can be passed that will convert 
     *  the XML response to a JSON string instead it is not
     *  part of the API values. If you specify here and in 
     *  configArgs, this will overide configArgs value
     * @optional requestParams['jsonResponse'] - [String]
     **/
    amazonPayClient.prototype.refund = function(requestParams) {
        const requestParamsCopy = { ...requestParams };
        const action = 'Refund';
        const canonicalParams = {};

        Helper.addBaseParams(canonicalParams, action, this.configArgs, requestParamsCopy);
        Helper.addToMap(canonicalParams, 'AmazonCaptureId',
            requestParamsCopy.amazonCaptureId);
        Helper.addToMap(canonicalParams, 'RefundReferenceId',
            requestParamsCopy.refundReferenceId);
        Helper.addToMap(canonicalParams, 'RefundAmount.Amount',
            requestParamsCopy.amount);
        Helper.addToMap(canonicalParams, 'RefundAmount.CurrencyCode',
            (requestParamsCopy.currencyCode || this.configArgs.currencyCode));
        Helper.addToMap(canonicalParams, 'SellerRefundNote',
            requestParamsCopy.sellerNote);
        Helper.addToMap(canonicalParams, 'SoftDescriptor',
            requestParamsCopy.softDescriptor);

        const response = Helper.sendParam(canonicalParams, this.configArgs);
        
        return Helper.jsonOrXML((requestParamsCopy.jsonResponse || 
            this.configArgs.jsonResponse), response, action);
    }

    /** ValidateBillignAgreement API Call 
     *   - Validates the status of the Billing Agreement object and 
     *      the payment method associated with it.
     * @see https://pay.amazon.com/developer/documentation/apireference/201751720
     * @param requestParams['amazonBillingAgreementId'] - [String]
     * @optional requestParams['merchantId'] - [String]
     * @optional requestParams['mwsAuthToken'] - [String]
     * 
     * Below is a variable that can be passed that will convert 
     *  the XML response to a JSON string instead it is not
     *  part of the API values. If you specify here and in 
     *  configArgs, this will overide configArgs value
     * @optional requestParams['jsonResponse'] - [String]
     **/
    amazonPayClient.prototype.validateBillingAgreement = function(requestParams) {
        const requestParamsCopy = { ...requestParams };
        const action = 'ValidateBillingAgreement';
        const canonicalParams = {};

        Helper.addBaseParams(canonicalParams, action, this.configArgs, requestParamsCopy);
        Helper.addToMap(canonicalParams, 'AmazonBillingAgreementId',
            requestParamsCopy.amazonBillingAgreementId);

        const response = Helper.sendParam(canonicalParams, this.configArgs);
        
        return Helper.jsonOrXML((requestParamsCopy.jsonResponse || 
            this.configArgs.jsonResponse), response, action);
    }
//}

module.exports = { amazonPayClient: amazonPayClient };